name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js v14
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore node_modules
        uses: actions/cache@v2
        id: restore-node-modules
        env:
          cache-name: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - name: Restore NPM cache
        uses: actions/cache@v2
        if: steps.restore-node-modules.outputs.cache-hit != 'true'
        env:
          cache-name: yarn-cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
      - name: Install dependencies
        if: steps.restore-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build
      - name: Lint
        run: npm run lint
      - name: Checkstyle Prettier
        run: npm run prettier
      - name: Publish Artifacts # For use in other jobs in this workflow
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  deploy:
    name: Deploy to IBM CF
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    env:
      APP_NAME: TicketCounter
      CREDENTIALS_SERVICE_NAME: TicketCounter-Secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Install cf CLI and plugins
        run: |
          wget -q -O - https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | sudo apt-key add -
          echo "deb https://packages.cloudfoundry.org/debian stable main" | sudo tee /etc/apt/sources.list.d/cloudfoundry-cli.list
          sudo apt-get update
          sudo apt-get install cf-cli
          cf add-plugin-repo CF-Community https://plugins.cloudfoundry.org
          cf install-plugin blue-green-deploy -f -r CF-Community
          cf -v

      - name: Login to IBM Cloud
        run: |
          cf login -a https://api.us-south.cf.cloud.ibm.com -o ${{ secrets.CF_ORG }} -s ${{ secrets.CF_SPACE }} -u apikey -p ${{ secrets.CF_API_KEY }}

      - name: Create credentials file
        uses: schdck/create-env-json@v2
        id: create-env
        with:
          file-name: 'credentials.json'
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_SUPPORT_CHANNEL: ${{ secrets.SLACK_SUPPORT_CHANNEL }}
          GITHUB_APP_PRIVATE_KEY: ${{ secrets._GITHUB_APP_PRIVATE_KEY }}
          GITHUB_APP_ID: ${{ secrets._GITHUB_APP_ID }}
          GITHUB_APP_WEBHOOK_SECRET: ${{ secrets._GITHUB_APP_WEBHOOK_SECRET }}
          GITHUB_APP_INSTALLATION_ID: ${{ secrets._GITHUB_APP_INSTALLATION_ID }}
          GITHUB_REPO_NAME: ${{ secrets._GITHUB_REPO_NAME }}
          GITHUB_REPO_OWNER: ${{ secrets._GITHUB_REPO_OWNER }}

      - name: Deploy to IBM Cloud
        run: |
          (cf service $CREDENTIALS_SERVICE_NAME && cf uups $CREDENTIALS_SERVICE_NAME -p ./credentials.json) || cf cups $CREDENTIALS_SERVICE_NAME -p ./credentials.json
          cf blue-green-deploy $APP_NAME --delete-old-apps

      - name: Deploy logs on failure
        if: ${{ failure() }}
        run: |
          cf logs $APP_NAME-new --recent
